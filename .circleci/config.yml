version: 2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          RAILS_ENV: test
      - image: mysql:5.7.29
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - checkout
      - run:
          name: install bundler
          command: |
              gem update --system	
              gem install bundler
      - restore_cache:
          keys:
            - app-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - app-
      - run: bundle install --path vendor/bundle
      - run: yarn install
      - save_cache:
          key: app-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - vendor/bundle
            - node_modules
      - run: cp config/database.yml.circleci config/database.yml
      - run: bundle exec rake db:create db:schema:load
      - run: bundle exec bin/webpack
      - run: bundle exec rubocop
      - run: bundle exec rspec
  deploy:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
    working_directory: /tmp/repo
    steps:
      - checkout
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: deploy to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
